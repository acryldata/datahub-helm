apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "datahub-frontend.fullname" . }}
  labels:
    {{- include "datahub-frontend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "datahub-frontend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "datahub-frontend.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "datahub-frontend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        {{- with .Values.global.credentialsAndCertsSecrets }}
        - name: datahub-certs-dir
          secret:
            defaultMode: 0444
            secretName: {{ .name }}
        {{- end }}
        {{- if .Values.exporters.jmx.enabled }}
        - name: config-jmx-exporter
          configMap:
            name: {{ include "datahub-gms.fullname" . }}-config-jmx-exporter
        {{- end }}
      {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      {{- with .Values.extraInitContainers }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9002
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /admin
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /admin
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          env:
            - name: DATAHUB_GMS_HOST
              value: {{ printf "%s-%s" .Release.Name "datahub-gms" }}
            - name: DATAHUB_GMS_PORT
              value: "{{ .Values.global.datahub.gms.port }}"
            - name: DATAHUB_SECRET
              valueFrom:
                {{- if .Values.existingGmsSecret }}
                secretKeyRef:
                  name: "{{ .Values.existingGmsSecret.name }}"
                  key: "{{ .Values.existingGmsSecret.key }}"
                {{- else }}
                secretKeyRef:
                  name: {{ printf "%s-gms-secret" .Release.Name }}
                  key: datahub.gms.secret
                {{- end }}
            - name: DATAHUB_APP_VERSION
              value: "{{ .Values.global.datahub.appVersion }}"
            - name: DATAHUB_PLAY_MEM_BUFFER_SIZE
              value: "{{ .Values.datahub.play.mem.buffer.size }}"
            - name: DATAHUB_ANALYTICS_ENABLED
              value: "{{ .Values.global.datahub_analytics_enabled }}"
            {{- if .Values.global.datahub_analytics_enabled }}
            - name: KAFKA_BOOTSTRAP_SERVER
              value: "{{ .Values.global.kafka.bootstrap.server }}"
            {{- if .Values.global.springKafkaConfigurationOverrides }}
            {{- range $configName, $configValue := .Values.global.springKafkaConfigurationOverrides }}
            - name: KAFKA_PROPERTIES_{{ $configName | replace "." "_" | upper }}
              value: {{ $configValue }}
            {{- end }}
            {{- end }}
            {{- if .Values.global.credentialsAndCertsSecrets }}
            {{- range $envVarName, $envVarValue := .Values.global.credentialsAndCertsSecrets.secureEnv }}
            - name: KAFKA_PROPERTIES_{{ $envVarName | replace "." "_" | upper }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.global.credentialsAndCertsSecrets.name }}
                  key: {{ $envVarValue }}
            {{- end }}
            {{- end }}
            - name: ELASTIC_CLIENT_HOST
              value: "{{ .Values.global.elasticsearch.host }}"
            - name: ELASTIC_CLIENT_PORT
              value: "{{ .Values.global.elasticsearch.port }}"
            {{- with .Values.global.elasticsearch.useSSL }}
            - name: ELASTIC_CLIENT_USE_SSL
              value: {{ . | quote }}
            {{- end }}
            {{- with .Values.global.elasticsearch.auth }}
            - name: ELASTIC_CLIENT_USERNAME
              value: {{ .username }}
            - name: ELASTIC_CLIENT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .password.secretRef }}"
                  key: "{{ .password.secretKey }}"
            {{- end }}
            {{- with .Values.global.elasticsearch.indexPrefix }}
            - name: ELASTIC_INDEX_PREFIX
              value: {{ . }}
            {{- end }}
            {{- if .Values.global.kafka.topics }}
            - name: DATAHUB_TRACKING_TOPIC
              value: {{ .Values.global.kafka.topics.datahub_usage_event_name}}
            {{- else }}
            - name: DATAHUB_TRACKING_TOPIC
              value: "DataHubUsageEvent_v1"
            {{- end }}
            {{- end }}
          {{- with .Values.extraEnvs }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- with .Values.global.credentialsAndCertsSecrets }}
            - name: datahub-certs-dir
              mountPath: {{ .path | default "/mnt/certs" }}
          {{- end }}
          {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

        {{- include "datahub-jmxexporter.container" . }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
