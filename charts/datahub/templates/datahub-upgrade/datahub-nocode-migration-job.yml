{{- if .Values.datahubUpgrade.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-nocode-migration-job
  labels:
    {{- include "datahub.labels" . | nindent 4 }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-2"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    {{- if or .Values.global.podLabels .Values.datahubUpgrade.podAnnotations}}
    metadata:
    {{- with .Values.datahubUpgrade.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.global.podLabels }}
      labels:
        {{- range $key, $value := . }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    {{- end }}
    {{- end }}
    spec:
    {{- with .Values.global.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.datahubUpgrade.serviceAccount }}
      serviceAccountName: {{ . }}
    {{- end }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        {{- with .Values.global.credentialsAndCertsSecrets }}
        - name: datahub-certs-dir
          secret:
            defaultMode: 0444
            secretName: {{ .name }}
        {{- end }}
      {{- with .Values.datahubUpgrade.extraVolumes }}
        {{- toYaml . | nindent 8}}
      {{- end }}
      restartPolicy: Never
      securityContext:
        {{- toYaml .Values.datahubUpgrade.podSecurityContext | nindent 8 }}
      initContainers:
      {{- with .Values.datahubUpgrade.extraInitContainers }}
        {{- toYaml . | nindent 12 }}
      {{- end }}
      containers:
        - name: datahub-upgrade-job
          image: "{{ .Values.datahubUpgrade.image.repository }}:{{ required "Global or specific tag is required" ($.Values.datahubUpgrade.image.tag | default .Values.global.datahub.version) }}"
          imagePullPolicy: {{ .Values.datahubUpgrade.image.pullPolicy | default "IfNotPresent" }}
          args:
            - "-u"
            - "NoCodeDataMigration"
            - "-a"
            - "batchSize={{ .Values.datahubUpgrade.batchSize }}"
            - "-a"
            - "batchDelayMs={{ .Values.datahubUpgrade.batchDelayMs }}"
            - "-a"
            - "dbType={{ .Values.datahubUpgrade.noCodeDataMigration.sqlDbType }}"
          env:
            {{- include "datahub.upgrade.env" . | nindent 12}}
          {{- with .Values.datahubUpgrade.extraEnvs }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.datahubUpgrade.securityContext | nindent 12 }}
          volumeMounts:
          {{- with .Values.global.credentialsAndCertsSecrets }}
            - name: datahub-certs-dir
              mountPath: {{ .path | default "/mnt/certs" }}
          {{- end }}
          {{- with .Values.datahubUpgrade.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
        {{- with .Values.datahubUpgrade.extraSidecars }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.datahubUpgrade.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 12 }}
      {{- end }}
      {{- with .Values.datahubUpgrade.affinity }}
      affinity:
        {{- toYaml . | nindent 12 }}
      {{- end }}
      {{- with .Values.datahubUpgrade.tolerations }}
      tolerations:
        {{- toYaml . | nindent 12 }}
      {{- end }}
{{- end -}}
