{{- if .Values.mysqlSetupJob.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-mysql-setup-job
  labels:
    {{- include "datahub.labels" . | nindent 4 }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    {{- if or .Values.global.podLabels .Values.mysqlSetupJob.podAnnotations }}
    metadata:
    {{- with .Values.mysqlSetupJob.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.global.podLabels }}
      labels:
        {{- range $key, $value := . }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    {{- end }}
    {{- end }}
    spec:
    {{- with .Values.global.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.mysqlSetupJob.serviceAccount }}
      serviceAccountName: {{ . }}
    {{- end }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      {{- with .Values.mysqlSetupJob.extraVolumes }}
        {{- toYaml . | nindent 8}}
      {{- end }}
      restartPolicy: Never
      securityContext:
        {{- toYaml .Values.mysqlSetupJob.podSecurityContext | nindent 8 }}
      containers:
        - name: mysql-setup-job
          image: "{{ .Values.mysqlSetupJob.image.repository }}:{{ required "Global or specific tag is required" ( .Values.mysqlSetupJob.image.tag | default .Values.global.datahub.version) }}"
          imagePullPolicy: {{ .Values.mysqlSetupJob.image.pullPolicy | default "IfNotPresent" }}
          env:
            - name: MYSQL_USERNAME
              value: {{ .Values.mysqlSetupJob.username | default .Values.global.sql.datasource.username | quote }}
            - name: MYSQL_PASSWORD
              {{- $passwordValue := (.Values.mysqlSetupJob.password).value | default .Values.global.sql.datasource.password.value }}
              {{- if $passwordValue }}
              value: {{ $passwordValue | quote }}
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: "{{ (.Values.mysqlSetupJob.password).secretRef | default .Values.global.sql.datasource.password.secretRef }}"
                  key: "{{ (.Values.mysqlSetupJob.password).secretKey | default .Values.global.sql.datasource.password.secretKey }}"
              {{- end }}
            - name: MYSQL_HOST
              value: {{ .Values.global.sql.datasource.hostForMysqlClient | quote }}
            - name: MYSQL_PORT
              value: {{ .Values.global.sql.datasource.port | quote }}
          {{- with .Values.mysqlSetupJob.extraEnvs }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.mysqlSetupJob.securityContext | nindent 12 }}
          volumeMounts:
          {{- with .Values.mysqlSetupJob.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.mysqlSetupJob.resources | nindent 12 }}
        {{- with .Values.mysqlSetupJob.extraSidecars }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.mysqlSetupJob.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mysqlSetupJob.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mysqlSetupJob.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}
