---
# Source: datahub-prerequisites/charts/cp-helm-charts/charts/cp-schema-registry/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: datahub-prerequisites-cp-schema-registry
  labels:
    app: cp-schema-registry
    chart: cp-schema-registry-0.1.0
    release: datahub-prerequisites
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cp-schema-registry
      release: datahub-prerequisites
  template:
    metadata:
      labels:
        app: cp-schema-registry
        release: datahub-prerequisites
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5556"
    spec:
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      containers:
        - name: prometheus-jmx-exporter
          image: "solsson/kafka-prometheus-jmx-exporter@sha256:6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143"
          imagePullPolicy: "IfNotPresent"
          command:
          - java
          - -XX:+UnlockExperimentalVMOptions
          - -XX:+UseCGroupMemoryLimitForHeap
          - -XX:MaxRAMFraction=1
          - -XshowSettings:vm
          - -jar
          - jmx_prometheus_httpserver.jar
          - "5556"
          - /etc/jmx-schema-registry/jmx-schema-registry-prometheus.yml
          ports:
          - containerPort: 5556
          resources:
            {}
          volumeMounts:
          - name: jmx-config
            mountPath: /etc/jmx-schema-registry
        - name: cp-schema-registry-server
          image: "confluentinc/cp-schema-registry:6.1.0"
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: schema-registry
              containerPort: 8081
              protocol: TCP
            - containerPort: 5555
              name: jmx
          resources:
            {}
          volumeMounts:
            - name: truststore
              mountPath: /etc/certificates/truststore
              readOnly: true
            - name: keystore
              mountPath: /etc/certificates/keystore
              readOnly: true
          env:
          - name: SCHEMA_REGISTRY_HOST_NAME
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SCHEMA_REGISTRY_LISTENERS
            value: http://0.0.0.0:8081
          - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
            value: strimzi-cluster-kafka-bootstrap:9092
          - name: SCHEMA_REGISTRY_KAFKASTORE_GROUP_ID
            value: datahub-prerequisites
          - name: SCHEMA_REGISTRY_MASTER_ELIGIBILITY
            value: "true"
          - name: SCHEMA_REGISTRY_HEAP_OPTS
            value: "-Xms512M -Xmx512M"
          - name: truststore_password
            valueFrom:
              secretKeyRef:
                name: strimzi-cluster-cluster-ca-cert
                key: ca.password
          - name: keystore_password
            valueFrom:
              secretKeyRef:
                name: datahub-kafka-user
                key: user.password
          - name: SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL
            value: "ssl"
          - name: SCHEMA_REGISTRY_SECURITY_PROTOCOL
            value: "ssl"
          - name: SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_TYPE
            value: "PKCS12"
          - name: SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION
            value: "/etc/certificates/truststore/ca.p12"
          - name: SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: strimzi-cluster-cluster-ca-cert
                key: ca.password
          - name: SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_TYPE
            value: "PKCS12"
          - name: SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION
            value: "/etc/certificates/keystore/user.p12"
          - name: SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: datahub-kafka-user
                key: user.password
          - name: JMX_PORT
            value: "5555"
      volumes:
      - name: truststore
        secret:
          secretName: strimzi-cluster-cluster-ca-cert
      - name: keystore
        secret:
          secretName: datahub-kafka-user
      - name: jmx-config
        configMap:
          name: datahub-prerequisites-cp-schema-registry-jmx-configmap
