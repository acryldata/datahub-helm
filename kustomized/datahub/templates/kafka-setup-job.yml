---
# Source: datahub/templates/kafka-setup-job.yml
apiVersion: batch/v1
kind: Job
metadata:
  name: datahub-kafka-setup-job
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "datahub"
    app.kubernetes.io/version: 0.8.27
    helm.sh/chart: "datahub-0.2.53"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    spec:
      restartPolicy: Never
      securityContext:
        fsGroup: 1000
      volumes:
        - name: truststore
          secret:
            defaultMode: 0444
            secretName: strimzi-cluster-cluster-ca-cert
        - name: keystore
          secret:
            defaultMode: 0444
            secretName: datahub-kafka-user
      containers:
        - name: kafka-setup-job
          image: "linkedin/datahub-kafka-setup:v0.8.27"
          imagePullPolicy: IfNotPresent
          env:
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "strimzi-cluster-zookeeper-client:2181"
            - name: KAFKA_BOOTSTRAP_SERVER
              value: "strimzi-cluster-kafka-bootstrap:9092"
            - name: KAFKA_PROPERTIES_KAFKASTORE_SECURITY_PROTOCOL
              value: SSL
            - name: KAFKA_PROPERTIES_KAFKASTORE_SSL_TRUSTSTORE_LOCATION
              value: /mnt/datahub/truststore/ca.p12
            - name: KAFKA_PROPERTIES_SECURITY_PROTOCOL
              value: SSL
            - name: KAFKA_PROPERTIES_SSL_CA_LOCATION
              value: /mnt/datahub/truststore/ca.crt
            - name: KAFKA_PROPERTIES_SSL_KEYSTORE_LOCATION
              value: /mnt/datahub/keystore/user.p12
            - name: KAFKA_PROPERTIES_SSL_KEYSTORE_TYPE
              value: PKCS12
            - name: KAFKA_PROPERTIES_SSL_PROTOCOL
              value: SSL
            - name: KAFKA_PROPERTIES_SSL_TRUSTSTORE_LOCATION
              value: /mnt/datahub/truststore/ca.p12
            - name: KAFKA_PROPERTIES_SSL_TRUSTSTORE_TYPE
              value: PKCS12
            - name: KAFKA_PROPERTIES_SSL_KEY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: datahub-kafka-user
                  key: user.password
            - name: KAFKA_PROPERTIES_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: strimzi-cluster-cluster-ca-cert
                  key: ca.password
            - name: KAFKA_PROPERTIES_SSL_TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: strimzi-cluster-cluster-ca-cert
                  key: ca.password
            - name: KAFKA_PROPERTIES_SSL_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: datahub-kafka-user
                  key: user.password
            - name: KAFKA_PROPERTIES_KAFKASTORE_SSL_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: datahub-kafka-user
                  key: user.password
          securityContext:
            runAsUser: 1000
          volumeMounts:
            - name: truststore
              mountPath: /mnt/datahub/truststore
              readOnly: true
            - name: keystore
              mountPath: /mnt/datahub/keystore
              readOnly: true
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
